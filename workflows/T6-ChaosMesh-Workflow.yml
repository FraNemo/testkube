apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflow
metadata:
  name: chaostest1 # name of the Test Workflow
  namespace: testkube
  labels: 
    tool: ChaosMesh
    type: pod-kill
spec: 
  # steps that will be executed by this Test Workflow
  steps: 
  #Chaos Mesh installation
  - name: Install Chaos Mesh
    run:  
      image: alpine/helm
      command: [sh, "-c"]
      args:
        - |
          echo "Installing kubectl...";
          apk add --no-cache curl;
          curl -LO "https://dl.k8s.io/release/$(curl -L -s \
          https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl";
          chmod +x kubectl;
          mv kubectl /usr/local/bin/;
          echo "Creating Chaos Mesh namespace...";
          kubectl create ns chaos-mesh;
          echo "Adding Chaos Mesh Helm repo...";
          helm repo add chaos-mesh https://charts.chaos-mesh.org;
          helm repo update;
          echo "Installing Chaos Mesh...";
          helm install chaos-mesh chaos-mesh/chaos-mesh --namespace \
          chaos-mesh --set controllerManager.replicas=1;
      
  #Chaos experiment execution
  - name: Submit Experiment 
    content: 
      git:
        uri: https://github.com/FraNemo/testkube/ 
        revision: main
        paths:
          - resources/pod-kill.yml
    workingDir: data/repo/resources
    run: 
      image: bitnami/kubectl  
      command: [sh, "-c"]
      args:
        - |
          echo "Waiting for Chaos Mesh to be ready...";
          kubectl wait --for=condition=available -n chaos-mesh \
          deployment/chaos-controller-manager;
          kubectl apply -f pod-kill.yml;
          sleep 600;
          kubectl get events -A -o custom-columns=\
          "MESSAGE:.message,TIME:.lastTimestamp,OBJECT:.involvedObject.name,REASON:.reason" \
          | grep Applied > /data/chaos-mesh-events.txt;
          kubectl delete -f pod-kill.yml;
          echo "Chaos experiment completed";
    artifacts: 
      workingDir: /data
      paths: 
        - chaos-mesh-events.txt

  #Uninstall Chaos Mesh
  - name: Uninstall Chaos Mesh
    run:  
      image: alpine/helm
      command: [sh, "-c"]
      args:
        - |
          echo "Uninstalling Chaos Mesh...";
          helm uninstall chaos-mesh -n chaos-mesh;